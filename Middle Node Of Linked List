Find the middle node of a given linked list.

Examples

L = null, return null
L = 1 -> null, return 1
L = 1 -> 2 -> null, return 1
L = 1 -> 2 -> 3 -> null, return 2
L = 1 -> 2 -> 3 -> 4 -> null, return 2

Solution: 
Fast pointer and Slow pointer.
Assumption: how to define the middle node? when it comes to 4 nodes. 


public class Solution {
  public ListNode middleNode(ListNode head) {
    // write your solution here
    // sanity check 
    if (head == null) {
      return head;
    }
    
    ListNode fast = head; 
    ListNode slow = head; 
    
    while (fast.next != null && fast.next.next != null) {
      slow = slow.next;
      fast = fast.next.next;
    }
    
    return slow;
  }
}

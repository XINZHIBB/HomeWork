Given a set of characters represented by a String, return a list containing all subsets of the characters.

Assumptions

There are no duplicate characters in the original set.  如果有duplicate的值呢
Examples

Set = "abc", all the subsets are [“”, “a”, “ab”, “abc”, “ac”, “b”, “bc”, “c”]
Set = "", all the subsets are [""]
Set = null, all the subsets are []

Solution: 
Each level make the decision that if the current element is put in the final result or not. 
Each level have two branches. put it or not 



public class Solution {
  public List<String> subSets(String set) {
    // Write your solution here.
    List<String> result = new ArrayList<String>();
    if (set == null) {
      return result; 
    }
    
    char[] charArray = set.toCharArray(); 
    StringBuilder sb = new StringBuilder();
    helper(charArray, sb, 0, result);
    return result;
  }
  private void helper(char[] charArray, StringBuilder sb, int index, List<String> result) {
    // base case 
    if (index == charArray.length) {
      result.add(sb.toString());
      return; 
    }
    // add 
    sb.append(charArray[index]); 
    helper(charArray, sb, index + 1, result); 
    sb.deleteCharAt(sb.length() - 1); 
    // not add
    helper(charArray, sb, index + 1, result); 
  }
}

Evaluate a to the power of b, assuming both a and b are integers and b is non-negative. 

Examples

power(2, 0) = 1
power(2, 3) = 8
power(0, 10) = 0
power(-2, 5) = -32
Corner Cases

What if the result is overflowed? We can assume the result will not be overflowed when we solve this problem on this online judge.

Solution:

method: split to b to b/2 
Step1: base case 
Step2: recursion rule 

在recursive rule中，要尽量减少function的使用，这样可以很大程度上优化时间，空间复杂度

Time complexity: O(n)
Space complexity: O(n)

    public long power(int a, int b) {
        // Write your solution here
        // Base case
        if (b == 0) {
            return 1;
        }
        if (b == 1) {
            return a;
        }

        // Recursion rule
        if (b % 2 == 0) {
            return power(a, b / 2)* power(a, b / 2);
        } else {
            return power(a, b / 2)* power(a, b / 2)* a;
        }
    }




Time complexity: O(logn)
Space complexity: O(logn)

public class Solution {
  public long power(int a, int b) {
    // Write your solution here
    // Base case
    if (b == 0) {
      return 1;
    }
    if (b == 1) {
      return a; 
    }
    
    // Recursion rule 
    long k = power(a, b / 2);
    if (b % 2 == 0) {
      return k * k ; 
    } else {
      return k * k * a; 
    }
  }
}
